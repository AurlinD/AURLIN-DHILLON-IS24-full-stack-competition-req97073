openapi: 3.0.0
info:
  title: code challenge
  description: APIs for products
  version: 0.1.9

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get all products.
      operationId: getProducts
      responses:
        "200":
          description: List of Products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Products"
    post:
      tags:
        - Products
      summary: Add product.
      operationId: addProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
      responses:
        "201":
          description: New product created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
  /products/{productId}:
    put:
      tags:
        - Products
      summary: Updates the product with a given ID.
      operationId: updateProduct
      parameters:
        - in: path
          name: productId
          description: ID of the product to update.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
      responses:
        "201":
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "404":
          description: product with given ID does not exist/

    delete:
      tags:
        - Products
      summary: Removes the product with a given ID.
      operationId: deleteProduct
      parameters:
        - in: path
          name: productId
          description: ID of product to delete.
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Product removed successfully.
        "404":
          description: Product not found.
          content:
            text/plain:
              schema:
                type: integer
                example: product with given ID does not exist.

components:
  schemas:
    Products:
      type: object
      required:
        - productName
        - productOwnerName
        - developers
        - scrumMasterName
        - startDate
        - methodology
      properties:
        productId:
          type: integer
          description: ID for a product.
          example: "1"
        productOwnerName:
          type: string
          description: Name of the product owner associated with the product.
          example: Ernest Wiegand
        developers:
          type: array
          items:
            type: string
          description: List of developers working on the product
          example: ["Delores Collier", "Margaret Labadie", "Jermaine Padberg"]
        scrumMasterName:
          type: string
          description: Name of the scrum master associated with the product.
          example: Nadine Cormier
        startDate:
          type: string
          description: Starting date of the project.
          example: "1995/01/12"
        methodology:
          type: string
          description: Development principles associated with the product.
          example: "Waterfall"
